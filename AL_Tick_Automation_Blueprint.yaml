blueprint:
  name: "Ataraxia Lighting – Master Tick Automation (v0.3)"
  description: >
    Master timer tick that fans out to 11 areas. Reads brightness_pct and
    color_temp_kelvin from a GLOBAL Adaptive Lighting (AL) switch once per tick.
    Any area can optionally specify its own AL switch override; if provided,
    that area's values come from the override instead of the global.
    Determines ON/OFF from each area's light state and calls the area's script.
    Includes a global stagger delay and an optional transition (defaults empty).
  domain: automation
  author: mnestrud
  source_url: https://raw.githubusercontent.com/mnestrud/ha_random/main/AL_Tick_Automation_Blueprint.yaml

  input:
    timer_entity:
      name: "Timer"
      description: "Restarted each tick to pace the cadence"
      selector:
        entity:
          domain: timer

    z2m_bridge:
      name: "Zigbee2MQTT Bridge Online Sensor"
      selector:
        entity:
          domain: binary_sensor

    global_al_switch:
      name: "Global Adaptive Lighting dummy switch"
      description: "Used for all areas unless an area override is provided"
      selector:
        entity:
          domain: switch

    per_area_delay:
      name: "Per-area stagger (seconds)"
      default: 4
      selector:
        number:
          min: 0
          max: 60
          step: 1
          mode: slider

    transition:
      name: "Transition (seconds) – optional"
      description: "Leave empty to skip (scripts should treat empty as no transition)"
      default: ""
      selector:
        text: {}

    # ------- 11 area blocks (enable, light, script, optional AL override) -------
    a1_enable:
      name: "Area 1 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a1_light:
      name: "Area 1 – Light entity"
      selector: { entity: { domain: light } }
    a1_script:
      name: "Area 1 – Script to call"
      selector: { entity: { domain: script } }
    a1_al_switch_override:
      name: "Area 1 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a2_enable:
      name: "Area 2 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a2_light:
      name: "Area 2 – Light entity"
      selector: { entity: { domain: light } }
    a2_script:
      name: "Area 2 – Script to call"
      selector: { entity: { domain: script } }
    a2_al_switch_override:
      name: "Area 2 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a3_enable:
      name: "Area 3 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a3_light:
      name: "Area 3 – Light entity"
      selector: { entity: { domain: light } }
    a3_script:
      name: "Area 3 – Script to call"
      selector: { entity: { domain: script } }
    a3_al_switch_override:
      name: "Area 3 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a4_enable:
      name: "Area 4 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a4_light:
      name: "Area 4 – Light entity"
      selector: { entity: { domain: light } }
    a4_script:
      name: "Area 4 – Script to call"
      selector: { entity: { domain: script } }
    a4_al_switch_override:
      name: "Area 4 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a5_enable:
      name: "Area 5 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a5_light:
      name: "Area 5 – Light entity"
      selector: { entity: { domain: light } }
    a5_script:
      name: "Area 5 – Script to call"
      selector: { entity: { domain: script } }
    a5_al_switch_override:
      name: "Area 5 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a6_enable:
      name: "Area 6 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a6_light:
      name: "Area 6 – Light entity"
      selector: { entity: { domain: light } }
    a6_script:
      name: "Area 6 – Script to call"
      selector: { entity: { domain: script } }
    a6_al_switch_override:
      name: "Area 6 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a7_enable:
      name: "Area 7 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a7_light:
      name: "Area 7 – Light entity"
      selector: { entity: { domain: light } }
    a7_script:
      name: "Area 7 – Script to call"
      selector: { entity: { domain: script } }
    a7_al_switch_override:
      name: "Area 7 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a8_enable:
      name: "Area 8 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a8_light:
      name: "Area 8 – Light entity"
      selector: { entity: { domain: light } }
    a8_script:
      name: "Area 8 – Script to call"
      selector: { entity: { domain: script } }
    a8_al_switch_override:
      name: "Area 8 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a9_enable:
      name: "Area 9 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a9_light:
      name: "Area 9 – Light entity"
      selector: { entity: { domain: light } }
    a9_script:
      name: "Area 9 – Script to call"
      selector: { entity: { domain: script } }
    a9_al_switch_override:
      name: "Area 9 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a10_enable:
      name: "Area 10 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a10_light:
      name: "Area 10 – Light entity"
      selector: { entity: { domain: light } }
    a10_script:
      name: "Area 10 – Script to call"
      selector: { entity: { domain: script } }
    a10_al_switch_override:
      name: "Area 10 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

    a11_enable:
      name: "Area 11 – Enable boolean"
      selector: { entity: { domain: input_boolean } }
    a11_light:
      name: "Area 11 – Light entity"
      selector: { entity: { domain: light } }
    a11_script:
      name: "Area 11 – Script to call"
      selector: { entity: { domain: script } }
    a11_al_switch_override:
      name: "Area 11 – AL switch override (optional)"
      default: null
      selector: { entity: { domain: switch } }

mode: single
max_exceeded: silent

triggers:
  - trigger: event
    event_type: timer.finished
    event_data:
      entity_id: !input timer_entity
    id: TICK
  - trigger: homeassistant
    event: start
    id: START

conditions: []

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: START
        sequence:
          - action: timer.start
            target:
              entity_id: !input timer_entity

      - conditions:
          - condition: trigger
            id: TICK
        sequence:
          - condition: state
            entity_id: !input z2m_bridge
            state: "on"

          # ---------- Read global & per-area overrides once per tick ----------
          - variables:
              _stagger: !input per_area_delay
              _transition: !input transition

              # Bind inputs to variables (so they always exist)
              g_sw: !input global_al_switch

              ov1: !input a1_al_switch_override
              ov2: !input a2_al_switch_override
              ov3: !input a3_al_switch_override
              ov4: !input a4_al_switch_override
              ov5: !input a5_al_switch_override
              ov6: !input a6_al_switch_override
              ov7: !input a7_al_switch_override
              ov8: !input a8_al_switch_override
              ov9: !input a9_al_switch_override
              ov10: !input a10_al_switch_override
              ov11: !input a11_al_switch_override

              # Global AL values (single read)
              _g_bri: "{{ state_attr(g_sw, 'brightness_pct') | int(50) }}"
              _g_kel: "{{ state_attr(g_sw, 'color_temp_kelvin') | float(2700) }}"

              # Per-area resolved values: use override if provided, else global
              _a1_bri: "{{ state_attr(ov1, 'brightness_pct') | int(_g_bri) if ov1 else _g_bri }}"
              _a1_kel: "{{ state_attr(ov1, 'color_temp_kelvin') | float(_g_kel) if ov1 else _g_kel }}"
              _a2_bri: "{{ state_attr(ov2, 'brightness_pct') | int(_g_bri) if ov2 else _g_bri }}"
              _a2_kel: "{{ state_attr(ov2, 'color_temp_kelvin') | float(_g_kel) if ov2 else _g_kel }}"
              _a3_bri: "{{ state_attr(ov3, 'brightness_pct') | int(_g_bri) if ov3 else _g_bri }}"
              _a3_kel: "{{ state_attr(ov3, 'color_temp_kelvin') | float(_g_kel) if ov3 else _g_kel }}"
              _a4_bri: "{{ state_attr(ov4, 'brightness_pct') | int(_g_bri) if ov4 else _g_bri }}"
              _a4_kel: "{{ state_attr(ov4, 'color_temp_kelvin') | float(_g_kel) if ov4 else _g_kel }}"
              _a5_bri: "{{ state_attr(ov5, 'brightness_pct') | int(_g_bri) if ov5 else _g_bri }}"
              _a5_kel: "{{ state_attr(ov5, 'color_temp_kelvin') | float(_g_kel) if ov5 else _g_kel }}"
              _a6_bri: "{{ state_attr(ov6, 'brightness_pct') | int(_g_bri) if ov6 else _g_bri }}"
              _a6_kel: "{{ state_attr(ov6, 'color_temp_kelvin') | float(_g_kel) if ov6 else _g_kel }}"
              _a7_bri: "{{ state_attr(ov7, 'brightness_pct') | int(_g_bri) if ov7 else _g_bri }}"
              _a7_kel: "{{ state_attr(ov7, 'color_temp_kelvin') | float(_g_kel) if ov7 else _g_kel }}"
              _a8_bri: "{{ state_attr(ov8, 'brightness_pct') | int(_g_bri) if ov8 else _g_bri }}"
              _a8_kel: "{{ state_attr(ov8, 'color_temp_kelvin') | float(_g_kel) if ov8 else _g_kel }}"
              _a9_bri: "{{ state_attr(ov9, 'brightness_pct') | int(_g_bri) if ov9 else _g_bri }}"
              _a9_kel: "{{ state_attr(ov9, 'color_temp_kelvin') | float(_g_kel) if ov9 else _g_kel }}"
              _a10_bri: "{{ state_attr(ov10, 'brightness_pct') | int(_g_bri) if ov10 else _g_bri }}"
              _a10_kel: "{{ state_attr(ov10, 'color_temp_kelvin') | float(_g_kel) if ov10 else _g_kel }}"
              _a11_bri: "{{ state_attr(ov11, 'brightness_pct') | int(_g_bri) if ov11 else _g_bri }}"
              _a11_kel: "{{ state_attr(ov11, 'color_temp_kelvin') | float(_g_kel) if ov11 else _g_kel }}"

              # Areas table for the loop
              areas:
                - enable: !input a1_enable
                  light: !input a1_light
                  script: !input a1_script
                  bri: "{{ _a1_bri }}"
                  kel: "{{ _a1_kel }}"
                - enable: !input a2_enable
                  light: !input a2_light
                  script: !input a2_script
                  bri: "{{ _a2_bri }}"
                  kel: "{{ _a2_kel }}"
                - enable: !input a3_enable
                  light: !input a3_light
                  script: !input a3_script
                  bri: "{{ _a3_bri }}"
                  kel: "{{ _a3_kel }}"
                - enable: !input a4_enable
                  light: !input a4_light
                  script: !input a4_script
                  bri: "{{ _a4_bri }}"
                  kel: "{{ _a4_kel }}"
                - enable: !input a5_enable
                  light: !input a5_light
                  script: !input a5_script
                  bri: "{{ _a5_bri }}"
                  kel: "{{ _a5_kel }}"
                - enable: !input a6_enable
                  light: !input a6_light
                  script: !input a6_script
                  bri: "{{ _a6_bri }}"
                  kel: "{{ _a6_kel }}"
                - enable: !input a7_enable
                  light: !input a7_light
                  script: !input a7_script
                  bri: "{{ _a7_bri }}"
                  kel: "{{ _a7_kel }}"
                - enable: !input a8_enable
                  light: !input a8_light
                  script: !input a8_script
                  bri: "{{ _a8_bri }}"
                  kel: "{{ _a8_kel }}"
                - enable: !input a9_enable
                  light: !input a9_light
                  script: !input a9_script
                  bri: "{{ _a9_bri }}"
                  kel: "{{ _a9_kel }}"
                - enable: !input a10_enable
                  light: !input a10_light
                  script: !input a10_script
                  bri: "{{ _a10_bri }}"
                  kel: "{{ _a10_kel }}"
                - enable: !input a11_enable
                  light: !input a11_light
                  script: !input a11_script
                  bri: "{{ _a11_bri }}"
                  kel: "{{ _a11_kel }}"

          - repeat:
              for_each: "{{ areas }}"
              sequence:
                - condition: template
                  value_template: >
                    {{ repeat.item.enable is not none and
                       repeat.item.light  is not none and
                       repeat.item.script is not none and
                       repeat.item.bri    is not none and
                       repeat.item.kel    is not none and
                       is_state(repeat.item.enable, 'on') }}

                - variables:
                    _is_on: "{{ is_state(repeat.item.light, 'on') }}"
                    _target_state: "{{ 'ON' if _is_on else 'OFF' }}"

                - action: script.turn_on
                  target:
                    entity_id: "{{ repeat.item.script }}"
                  data:
                    variables:
                      target_state: "{{ _target_state }}"
                      brightness_pct: "{{ repeat.item.bri }}"
                      color_temp_kelvin: "{{ repeat.item.kel }}"
                      transition: "{{ _transition }}"

                - delay:
                    seconds: "{{ _stagger | int(0) }}"

          - action: timer.start
            target:
              entity_id: !input timer_entity
