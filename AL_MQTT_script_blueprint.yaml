blueprint:
  name: Ataraxia Lighting Script
  domain: script
  author: mnestrud
  input:
    al_switch:
      name: Adaptive Lighting switch
      description: Adaptive Lighting Switch entity providing brightness_pct & color_temp_kelvin attributes
      selector:
        entity:
          domain: switch
    inovelli_set_topic:
      name: Light Switch - Zigbee2MQTT /set topic (Inovelli Blue)
      description: e.g. "zigbee2mqtt/Primary Bedroom Overhead Light Switch/set" - May be blank.
      default: ""
      selector:
        text:
    group_set_topic:
      name: Light Group or Individual Light - Zigbee2MQTT /set topic.
      description: e.g. "zigbee2mqtt/zgb_primary_bedroom/set" - May be blank.
      default: ""
      selector:
        text:
    inovelli_compare_entity:
      name: Entity to compare (switch brightness)
      description: Light entity representing the Inovelli-controlled load (used to compare current brightness)
      selector:
        entity:
          domain: light
    group_compare_entity:
      name: Entity to compare (group brightness/color)
      description: Light or group entity representing the Z2M group (used to compare current brightness & color_temp)
      selector:
        entity:
          domain: light

# ---------- Script body (logic unchanged; adds compare checks before publishes) ----------
alias: AL Bedroom Overhead
mode: single
fields:
  target_state:
    description: "\"ON\" or \"OFF\" (required)"
    example: "ON"
  brightness_pct:
    description: Optional brightness percent (0â€“100). Falls back to AL dummy switch.
    example: 72
  color_temp_kelvin:
    description: Optional color temp in Kelvin. Falls back to AL dummy switch.
    example: 2700
sequence:
  - variables:
      # Blueprint inputs
      al_sw: !input al_switch
      inovelli_topic: !input inovelli_set_topic
      group_topic: !input group_set_topic
      inovelli_compare: !input inovelli_compare_entity
      group_compare: !input group_compare_entity

      # Desired targets from AL (or overrides)
      pct: >-
        {% set p = brightness_pct | default(None) %}
        {% if p is number %}{{ p | int }}
        {% else %}{{ state_attr(al_sw,'brightness_pct') | int(50) }}
        {% endif %}
      kelvin: >-
        {% set k = color_temp_kelvin | default(None) %}
        {% if k is number %}{{ k | float }}
        {% else %}{{ state_attr(al_sw,'color_temp_kelvin') | float(2700) }}
        {% endif %}
      bri_raw: "{{ (pct * 254 / 100) | round(0) | int }}"
      bri: "{{ [ [ bri_raw, 1 ] | max, 254 ] | min }}"
      mired_raw: "{{ (1000000 / kelvin) | round(0) | int }}"
      mired: "{{ [ [ mired_raw, 153 ] | max, 500 ] | min }}"
      target_state_norm: "{{ target_state | upper }}"

      # Current attributes for comparison
      cur_bri_inovelli: >-
        {% set v = state_attr(inovelli_compare, 'brightness') %}
        {% if v is number %}{{ v | int }}{% else %}{{ None }}{% endif %}
      cur_bri_group: >-
        {% set v = state_attr(group_compare, 'brightness') %}
        {% if v is number %}{{ v | int }}{% else %}{{ None }}{% endif %}
      cur_mired_group: >-
        {% set v = state_attr(group_compare, 'color_temp') %}
        {% if v is number %}{{ v | int }}{% else %}{{ None }}{% endif %}

  # Publish to Inovelli only if topic non-blank AND brightness differs (or unknown)
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ (inovelli_topic | string | trim) | length > 0 }}"
          - condition: template
            value_template: >
              {{ cur_bri_inovelli is not number or cur_bri_inovelli != bri }}
        sequence:
          - action: mqtt.publish
            data:
              topic: "{{ inovelli_topic }}"
              qos: 0
              retain: false
              payload: |-
                {{
                  {
                    "level_config": {"execute_if_off": true},
                    "defaultLevelLocal": bri,
                    "defaultLevelRemote": bri,
                    "brightness": bri,
                    "state": target_state_norm
                  } | tojson
                }}

  # Delay only if BOTH topics are non-blank
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ (inovelli_topic | string | trim) | length > 0 and
                 (group_topic | string | trim) | length > 0 }}
        sequence:
          - delay: "00:00:01"

  # Publish to Zigbee2MQTT group only if topic non-blank AND (brightness OR color_temp) differs (or unknown)
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ (group_topic | string | trim) | length > 0 }}"
          - condition: template
            value_template: >
              {{ (cur_bri_group is not number or cur_bri_group != bri)
                 or (cur_mired_group is not number or cur_mired_group != mired) }}
        sequence:
          - action: mqtt.publish
            data:
              topic: "{{ group_topic }}"
              qos: 0
              retain: false
              payload: |-
                {{
                  {
                    "state": target_state_norm,
                    "level_config": {"execute_if_off": true},
                    "color_options": {"execute_if_off": true},
                    "brightness": bri,
                    "color_temp": mired
                  } | tojson
                }}
