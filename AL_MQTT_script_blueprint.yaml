blueprint:
  name: "AL → MQTT: Publish set payload (configurable topic)"
  description: >
    Publishes a Zigbee2MQTT `set` payload using brightness and color temperature
    derived from an Adaptive Lighting switch. Configure the MQTT topic per instance.
  domain: script
  input:
    mqtt_topic:
      name: MQTT Topic
      description: "Target topic, e.g., zigbee2mqtt/<device>/set"
      selector:
        text: {}
    al_switch:
      name: Adaptive Lighting Switch
      description: "Switch that exposes brightness_pct and color_temp_kelvin"
      default: switch.adaptive_lighting_al_dummy_overhead_control
      selector:
        entity:
          domain: switch

alias: "AL → MQTT: Publish set payload"
mode: restart
sequence:
  - action: mqtt.publish
    data:
      evaluate_payload: true
      qos: "1"
      retain: false
      topic: !input mqtt_topic
      payload: >-
        {{
          {
            "state": "ON",
            "transition": 1,
            "level_config": {"execute_if_off": true},
            "color_options": {"execute_if_off": true},
            "brightness": (
              (state_attr(!input al_switch, 'brightness_pct') | int * 255 / 100)
              | round(0)
            ),
            "color_temp": (
              1000000 / (state_attr(!input al_switch, 'color_temp_kelvin') | float)
            ) | round(0)
          } | tojson
        }}
